security:
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
  providers:
      app_users:
          entity:
              class: App\Entity\User
              property: username
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      lazy: true
      provider: app_users
      form_login:
        login_path: login
        check_path: login
        username_parameter: login[username]
        password_parameter: login[password]
        default_target_path: homepage

      logout: ~

  access_control:
        - { path: ^/login ,roles: PUBLIC_ACCESS }
        - { path: ^/registration, roles: PUBLIC_ACCESS }
        - { path: ^/, roles: ROLE_ADMIN }
        - { path: ^/weight, roles: ROLE_ADMIN }
        - { path: ^/add, roles: ROLE_ADMIN }
        - { path: ^/calorie, roles: ROLE_ADMIN }

when@test:
  security:
    password_hashers:
      # By default, password hashers are resource intensive and take time. This is
      # important to generate secure password hashes. In tests however, secure hashes
      # are not important, waste resources and increase test times. The following
      # reduces the work factor to the lowest possible values.
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon
